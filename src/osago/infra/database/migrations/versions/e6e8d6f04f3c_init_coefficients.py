"""init coefficients.

Revision ID: e6e8d6f04f3c
Revises:
Create Date: 2025-06-24 20:10:44.866862

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e6e8d6f04f3c"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bonus_malus",
        sa.Column("kbm_class", sa.Integer(), nullable=False),
        sa.Column("coefficient", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "horsepowers",
        sa.Column("max_horsepower", sa.Integer(), nullable=False),
        sa.Column("coefficient", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "insurance_coefficients",
        sa.Column("max_month", sa.Integer(), nullable=False),
        sa.Column("coefficient", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "insurance_rates",
        sa.Column("group", sa.String(), nullable=False),
        sa.Column("max_price", sa.Integer(), nullable=False),
        sa.Column("min_price", sa.Integer(), nullable=False),
        sa.Column("state", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "restriction_coefficients",
        sa.Column("limitation_flag", sa.Boolean(), nullable=False),
        sa.Column(
            "owner_type",
            sa.Enum("legal", "individual", name="ownertype"),
            nullable=False,
        ),
        sa.Column("coefficient", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "territorial_coefficients",
        sa.Column("region", sa.Integer(), nullable=False),
        sa.Column("city_name", sa.String(), nullable=False),
        sa.Column("state_transport_coefficient", sa.Float(), nullable=False),
        sa.Column("transport_coefficient", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "use_coefficients",
        sa.Column("max_month", sa.Integer(), nullable=False),
        sa.Column("coefficient", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "years_practices",
        sa.Column("max_years", sa.Integer(), nullable=False),
        sa.Column("max_practice", sa.Integer(), nullable=False),
        sa.Column("coefficient", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("years_practices")
    op.drop_table("use_coefficients")
    op.drop_table("territorial_coefficients")
    op.drop_table("restriction_coefficients")
    op.drop_table("insurance_rates")
    op.drop_table("insurance_coefficients")
    op.drop_table("horsepowers")
    op.drop_table("bonus_malus")
    # ### end Alembic commands ###
